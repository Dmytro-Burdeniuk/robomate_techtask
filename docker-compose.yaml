services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: event_api
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env

  db:
    image: postgres:15
    container_name: events_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      retries: 5
      timeout: 3s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: event_worker
    command: ["python", "-u", "-m", "app.worker"] 
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    env_file:
      - .env
    restart: always

  compactor:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: event_compactor
    command: ["python", "-m", "app.compaction"]
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./data:/app/data
    restart: always
